name: ci

on:  # Define here when your project will be tested
  push:               # all branches are tested on pushes to the repo
  pull_request:       # all pull-requests will be tested
  workflow_dispatch:  # this allows you to 'manually' launch the workflow

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}

    runs-on: ubuntu-latest

    # Here we will define the testing 'matrix'
    # -- It can be composed of whatever your matrix may be,
    # -- including OS variations (e.g. windows, macos, etc).
    # -- The executor will combine all possible values together
    strategy:
      fail-fast: false  # avoids cancelled builds if the other fails
      matrix:
        python-version: ['3.9', '3.10']

    # Here we define the steps to be undertaken for every test
    # -- Each step does one action.  Code for the action sits in
    # -- another github project (key 'uses').  This way, actions
    # -- can be programmed for any purpose.
    steps:

      # Action provided by GitHub to checkout code
      - name: Check out repository code
        uses: actions/checkout@v3

      # Default action: run something (prepares the Python environment)
      - name: Prepare Python ${{ matrix.python-version }}
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      # Default action: run something
      - name: Install package and build dependencies for Python ${{ matrix.python-version }}
        shell: bash -l {0}
        run: |
          pip install .
          pip install -r build-requirements.txt  #only required for CI tests

      # Default action: run something
      - name: Run all tests and upload coverage to coveralls
        shell: bash -l {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
        run: |
          rr-paper --help  #checks help function works at least
          rr-paper  #basic test case
          rr-paper --protocol=proto2  #filter by protocol
          rr-paper --case=2  #filter by case
          sphinx-build -b doctest doc sphinx  #runs doctests
          pytest -sv --cov=rr rr
          coveralls --service=github

      - name: Build documentation
        if: ${{ matrix.python-version == '3.9' }}  #builds only one variant
        shell: bash -l {0}
        run: |
          sphinx-build doc sphinx  #generates html version of docs
          touch sphinx/.nojekyll  #pages to be deployed are NOT a Jekyll site

      - name: Deploy documentation to GitHub Pages
        if: ${{ matrix.python-version == '3.9' && startsWith(github.ref, 'refs/tags') }}
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: sphinx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build PyPI (source) package
        # builds only from one variant
        if: ${{ matrix.python-version == '3.9' }}
        shell: bash -l {0}
        run: |
          python setup.py sdist

      - name: Deploy package to TestPyPI
        # deploys only one variant, and if it is tagged
        if: ${{ matrix.python-version == '3.9' && startsWith(github.ref, 'refs/tags') }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
